#!/bin/ksh

readonly TIMESTAMP="$(date "+%Y-%m-%d-%H-%M-%S")"

# exit immediately if a command exits with a non-zero status
set -e

# set OpenBSD version supported without the dot
readonly VER=63

# set filename of logfile
readonly LOG="./logfile-${TIMESTAMP}.txt"

# handle errors
err()
{
  echo "${1}" >&2 && return "${2:-1}"
}

# wrapper for executing commands
docmd()
{
  if [[ -n ${DRYRUN} ]]; then
    echo "$@"
  else
    echo "$@" >> ${LOG}
    # append STDOUT to logfile
    # convert STDERR to STDOUT which is piped to tee
    ("$@" >> ${LOG}) 2>&1 | tee -a ${LOG}
  fi
}

# install all libraries (opensmtpd, dovecot ...)
install_all()
{
  for i in ./lib/* ; do
    . "$i"
    "${i#*_}"_lib
  done
}

usage()
{
  echo "Usage: ${0##*/} [-nd] [library]"
  echo
  echo "  -d :   Debugmode. Print commands and parameter assignments"
  echo "         when they are executed."
  echo 
  echo "  -n :   Not executing commands just print out what will happen."
  echo "         This mode is also known as dryrun."
}

# Backup configuration file to /etc/examples
backup()
{
  local _filename="${1##*/}" _examples=/etc/examples
  if [ -r "$1" ]; then
    if [ ! -r $_examples/"$_filename" ]; then
      docmd cp -p "$1" $_examples
    else
      docmd cp -p "$1" $_examples/"$_filename"-"$(date "+%Y-%m-%d-%H-%M-%S")"
    fi
  fi
}

# are you using the good release ?
(($(uname -r | tr -d .) != VER)) && \
  err "${0##*/}: this release is not supported"

# the syntax
while getopts :dn opt; do
  case ${opt} in
    d) set -x && readonly DEBUG=1;;    # Debug mode when -d is present
    n) readonly DRYRUN=1;;             # Not executing commands
    *) usage;;
  esac
done

# running in dryrun mode?
[[ -n ${DRYRUN} ]] && echo "Doing a dryrun - Not executing commands" 

# only root can run this scipt if we are not in dryrun mode
(($(id -u) != 0)) && ((DRYRUN != 1)) && err "You need root privileges" 

# we remove an option
shift $((OPTIND - 1))

# only one library allowed, or empty library
(($# > 1)) && usage

# if no library mentioned we install all, otherwise, we just install 
# the library present in $1
if [[ -z $1 ]]; then
  install_all
else
  # does this library exist ?
  [[ ! -f ./lib/$1 ]] && err "${0##*/}: this library doesn't exist"
  # install the unique library
  . ./lib/$1
  "${1#*_}"_lib
fi
